/** @babel */
/* eslint-env jasmine, atomtest */

/*
  This file contains verifying specs for:
  https://github.com/sindresorhus/atom-editorconfig/issues/47
*/

var _commandsGenerate = require('../commands/generate');

xdescribe('editorconfig', function () {
	describe('when opening the keymap', function () {
		it('should\'t throw an exception when the generation of editorconfig fails', function () {
			runs(function () {
				atom.config.set('whitespace.removeTrailingWhitespace', true);
				atom.commands.dispatch(atom.views.getView(atom.workspace.getActivePane()), 'application:open-your-keymap');
				console.info(atom.textEditors.editors.size);
			});

			waitsFor(function () {
				console.info(atom.textEditors.editors.size);

				return atom.workspace.getTextEditors().length > 0;
			}, 'the keymap being opened', 5000);

			runs(function () {
				console.info(atom.workspace.getTextEditors()[0].getPath());
				expect(_commandsGenerate.init).not.toThrow();
			});
		});
	});
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9iZW5iYXJuZXR0Ly5hdG9tL3BhY2thZ2VzL2VkaXRvcmNvbmZpZy9zcGVjL2lzc3VlLTQ3LXNwZWMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Z0NBUXFDLHNCQUFzQjs7QUFFM0QsU0FBUyxDQUFDLGNBQWMsRUFBRSxZQUFNO0FBQy9CLFNBQVEsQ0FBQyx5QkFBeUIsRUFBRSxZQUFNO0FBQ3pDLElBQUUsQ0FBQyx3RUFBd0UsRUFBRSxZQUFNO0FBQ2xGLE9BQUksQ0FBQyxZQUFNO0FBQ1YsUUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMscUNBQXFDLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDN0QsUUFBSSxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQ3JCLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsYUFBYSxFQUFFLENBQUMsRUFDbEQsOEJBQThCLENBQzlCLENBQUM7QUFDRixXQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVDLENBQUMsQ0FBQzs7QUFFSCxXQUFRLENBQUMsWUFBTTtBQUNkLFdBQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7O0FBRTVDLFdBQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxjQUFjLEVBQUUsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBQ2xELEVBQUUseUJBQXlCLEVBQUUsSUFBSSxDQUFDLENBQUM7O0FBRXBDLE9BQUksQ0FBQyxZQUFNO0FBQ1YsV0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUM7QUFDM0QsVUFBTSx3QkFBZ0IsQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDckMsQ0FBQyxDQUFDO0dBQ0gsQ0FBQyxDQUFDO0VBQ0gsQ0FBQyxDQUFDO0NBQ0gsQ0FBQyxDQUFDIiwiZmlsZSI6Ii9Vc2Vycy9iZW5iYXJuZXR0Ly5hdG9tL3BhY2thZ2VzL2VkaXRvcmNvbmZpZy9zcGVjL2lzc3VlLTQ3LXNwZWMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGJhYmVsICovXG4vKiBlc2xpbnQtZW52IGphc21pbmUsIGF0b210ZXN0ICovXG5cbi8qXG4gIFRoaXMgZmlsZSBjb250YWlucyB2ZXJpZnlpbmcgc3BlY3MgZm9yOlxuICBodHRwczovL2dpdGh1Yi5jb20vc2luZHJlc29yaHVzL2F0b20tZWRpdG9yY29uZmlnL2lzc3Vlcy80N1xuKi9cblxuaW1wb3J0IHtpbml0IGFzIGdlbmVyYXRlQ29uZmlnfSBmcm9tICcuLi9jb21tYW5kcy9nZW5lcmF0ZSc7XG5cbnhkZXNjcmliZSgnZWRpdG9yY29uZmlnJywgKCkgPT4ge1xuXHRkZXNjcmliZSgnd2hlbiBvcGVuaW5nIHRoZSBrZXltYXAnLCAoKSA9PiB7XG5cdFx0aXQoJ3Nob3VsZFxcJ3QgdGhyb3cgYW4gZXhjZXB0aW9uIHdoZW4gdGhlIGdlbmVyYXRpb24gb2YgZWRpdG9yY29uZmlnIGZhaWxzJywgKCkgPT4ge1xuXHRcdFx0cnVucygoKSA9PiB7XG5cdFx0XHRcdGF0b20uY29uZmlnLnNldCgnd2hpdGVzcGFjZS5yZW1vdmVUcmFpbGluZ1doaXRlc3BhY2UnLCB0cnVlKTtcblx0XHRcdFx0YXRvbS5jb21tYW5kcy5kaXNwYXRjaChcblx0XHRcdFx0XHRhdG9tLnZpZXdzLmdldFZpZXcoYXRvbS53b3Jrc3BhY2UuZ2V0QWN0aXZlUGFuZSgpKSxcblx0XHRcdFx0XHQnYXBwbGljYXRpb246b3Blbi15b3VyLWtleW1hcCdcblx0XHRcdFx0KTtcblx0XHRcdFx0Y29uc29sZS5pbmZvKGF0b20udGV4dEVkaXRvcnMuZWRpdG9ycy5zaXplKTtcblx0XHRcdH0pO1xuXG5cdFx0XHR3YWl0c0ZvcigoKSA9PiB7XG5cdFx0XHRcdGNvbnNvbGUuaW5mbyhhdG9tLnRleHRFZGl0b3JzLmVkaXRvcnMuc2l6ZSk7XG5cblx0XHRcdFx0cmV0dXJuIGF0b20ud29ya3NwYWNlLmdldFRleHRFZGl0b3JzKCkubGVuZ3RoID4gMDtcblx0XHRcdH0sICd0aGUga2V5bWFwIGJlaW5nIG9wZW5lZCcsIDUwMDApO1xuXG5cdFx0XHRydW5zKCgpID0+IHtcblx0XHRcdFx0Y29uc29sZS5pbmZvKGF0b20ud29ya3NwYWNlLmdldFRleHRFZGl0b3JzKClbMF0uZ2V0UGF0aCgpKTtcblx0XHRcdFx0ZXhwZWN0KGdlbmVyYXRlQ29uZmlnKS5ub3QudG9UaHJvdygpO1xuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdH0pO1xufSk7XG4iXX0=